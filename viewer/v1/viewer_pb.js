// Copyright 2023 SaferPlace

// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file viewer/v1/viewer.proto (package viewer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Coordinates, Incident } from "../../incident/v1/incident_pb.js";

/**
 * ViewInRadiusRequest shows all incidents within specified radius (in meters).
 *
 * @generated from message viewer.v1.ViewInRadiusRequest
 */
export const ViewInRadiusRequest = proto3.makeMessageType(
  "viewer.v1.ViewInRadiusRequest",
  () => [
    { no: 1, name: "center", kind: "message", T: Coordinates },
    { no: 2, name: "radius", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * @generated from message viewer.v1.ViewInRadiusResponse
 */
export const ViewInRadiusResponse = proto3.makeMessageType(
  "viewer.v1.ViewInRadiusResponse",
  () => [
    { no: 1, name: "incidents", kind: "message", T: Incident, repeated: true },
  ],
);

/**
 * ViewIncidentRequest will show the incident based on the given id.
 *
 * @generated from message viewer.v1.ViewIncidentRequest
 */
export const ViewIncidentRequest = proto3.makeMessageType(
  "viewer.v1.ViewIncidentRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ViewIncidentResponse returns the incident for review.
 *
 * @generated from message viewer.v1.ViewIncidentResponse
 */
export const ViewIncidentResponse = proto3.makeMessageType(
  "viewer.v1.ViewIncidentResponse",
  () => [
    { no: 1, name: "incident", kind: "message", T: Incident },
  ],
);

