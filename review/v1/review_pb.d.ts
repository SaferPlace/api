// Copyright 2022 SaferPlace

// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file review/v1/review.proto (package review.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Incident, Resolution } from "../../incident/v1/incident_pb.js";

/**
 * ViewIncidentRequest will show the incident based on the given id.
 *
 * @generated from message review.v1.ViewIncidentRequest
 */
export declare class ViewIncidentRequest extends Message<ViewIncidentRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<ViewIncidentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.ViewIncidentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ViewIncidentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ViewIncidentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ViewIncidentRequest;

  static equals(a: ViewIncidentRequest | PlainMessage<ViewIncidentRequest> | undefined, b: ViewIncidentRequest | PlainMessage<ViewIncidentRequest> | undefined): boolean;
}

/**
 * ViewIncidentResponse returns the incident for review.
 *
 * @generated from message review.v1.ViewIncidentResponse
 */
export declare class ViewIncidentResponse extends Message<ViewIncidentResponse> {
  /**
   * @generated from field: incident.v1.Incident incident = 1;
   */
  incident?: Incident;

  constructor(data?: PartialMessage<ViewIncidentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.ViewIncidentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ViewIncidentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ViewIncidentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ViewIncidentResponse;

  static equals(a: ViewIncidentResponse | PlainMessage<ViewIncidentResponse> | undefined, b: ViewIncidentResponse | PlainMessage<ViewIncidentResponse> | undefined): boolean;
}

/**
 * IncomingIncidentRequest has the incident on which the reviewer should respond.
 *
 * @generated from message review.v1.ReviewIncidentRequest
 */
export declare class ReviewIncidentRequest extends Message<ReviewIncidentRequest> {
  /**
   * Id of the incident that the response is given to
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Comment left by the reviewer
   *
   * @generated from field: string comment = 2;
   */
  comment: string;

  /**
   * Resolution of the review. If the resolution is UNSPECIFIED, it means that
   * the incident has not reached a final review and will be re-scheduled for
   * review.
   *
   * @generated from field: incident.v1.Resolution resolution = 3;
   */
  resolution: Resolution;

  constructor(data?: PartialMessage<ReviewIncidentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.ReviewIncidentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReviewIncidentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReviewIncidentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReviewIncidentRequest;

  static equals(a: ReviewIncidentRequest | PlainMessage<ReviewIncidentRequest> | undefined, b: ReviewIncidentRequest | PlainMessage<ReviewIncidentRequest> | undefined): boolean;
}

/**
 * ReviewIncidentResponse is empty
 *
 * @generated from message review.v1.ReviewIncidentResponse
 */
export declare class ReviewIncidentResponse extends Message<ReviewIncidentResponse> {
  constructor(data?: PartialMessage<ReviewIncidentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.ReviewIncidentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReviewIncidentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReviewIncidentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReviewIncidentResponse;

  static equals(a: ReviewIncidentResponse | PlainMessage<ReviewIncidentResponse> | undefined, b: ReviewIncidentResponse | PlainMessage<ReviewIncidentResponse> | undefined): boolean;
}

/**
 * IncidentsWithoutReviewRequest is send to see all the reviews which have
 * the resolution set as UNSPECIFIED
 *
 * @generated from message review.v1.IncidentsWithoutReviewRequest
 */
export declare class IncidentsWithoutReviewRequest extends Message<IncidentsWithoutReviewRequest> {
  constructor(data?: PartialMessage<IncidentsWithoutReviewRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.IncidentsWithoutReviewRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncidentsWithoutReviewRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncidentsWithoutReviewRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncidentsWithoutReviewRequest;

  static equals(a: IncidentsWithoutReviewRequest | PlainMessage<IncidentsWithoutReviewRequest> | undefined, b: IncidentsWithoutReviewRequest | PlainMessage<IncidentsWithoutReviewRequest> | undefined): boolean;
}

/**
 * IncidentsWithoutReviewResponse contains the list of incidents which do not have a resolution.
 *
 * @generated from message review.v1.IncidentsWithoutReviewResponse
 */
export declare class IncidentsWithoutReviewResponse extends Message<IncidentsWithoutReviewResponse> {
  /**
   * @generated from field: repeated incident.v1.Incident incidents = 1;
   */
  incidents: Incident[];

  constructor(data?: PartialMessage<IncidentsWithoutReviewResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "review.v1.IncidentsWithoutReviewResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncidentsWithoutReviewResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncidentsWithoutReviewResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncidentsWithoutReviewResponse;

  static equals(a: IncidentsWithoutReviewResponse | PlainMessage<IncidentsWithoutReviewResponse> | undefined, b: IncidentsWithoutReviewResponse | PlainMessage<IncidentsWithoutReviewResponse> | undefined): boolean;
}

