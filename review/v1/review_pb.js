// Copyright 2022 SaferPlace

// @generated by protoc-gen-es v1.2.0 with parameter "target=js+dts"
// @generated from file review/v1/review.proto (package review.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Incident, Resolution } from "../../incident/v1/incident_pb.js";

/**
 * ViewIncidentRequest will show the incident based on the given id.
 *
 * @generated from message review.v1.ViewIncidentRequest
 */
export const ViewIncidentRequest = proto3.makeMessageType(
  "review.v1.ViewIncidentRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ViewIncidentResponse returns the incident for review.
 *
 * @generated from message review.v1.ViewIncidentResponse
 */
export const ViewIncidentResponse = proto3.makeMessageType(
  "review.v1.ViewIncidentResponse",
  () => [
    { no: 1, name: "incident", kind: "message", T: Incident },
  ],
);

/**
 * IncomingIncidentRequest has the incident on which the reviewer should respond.
 *
 * @generated from message review.v1.ReviewIncidentRequest
 */
export const ReviewIncidentRequest = proto3.makeMessageType(
  "review.v1.ReviewIncidentRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "resolution", kind: "enum", T: proto3.getEnumType(Resolution) },
  ],
);

/**
 * ReviewIncidentResponse is empty
 *
 * @generated from message review.v1.ReviewIncidentResponse
 */
export const ReviewIncidentResponse = proto3.makeMessageType(
  "review.v1.ReviewIncidentResponse",
  [],
);

/**
 * IncidentsWithoutReviewRequest is send to see all the reviews which have
 * the resolution set as UNSPECIFIED
 *
 * @generated from message review.v1.IncidentsWithoutReviewRequest
 */
export const IncidentsWithoutReviewRequest = proto3.makeMessageType(
  "review.v1.IncidentsWithoutReviewRequest",
  [],
);

/**
 * BasicIncidentDetails are send without are the bare minimum used to display
 * the incident.
 *
 * @generated from message review.v1.BasicIncidentDetails
 */
export const BasicIncidentDetails = proto3.makeMessageType(
  "review.v1.BasicIncidentDetails",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * IncidentsWithoutReviewResponse contains the list of basic incident details
 *
 * @generated from message review.v1.IncidentsWithoutReviewResponse
 */
export const IncidentsWithoutReviewResponse = proto3.makeMessageType(
  "review.v1.IncidentsWithoutReviewResponse",
  () => [
    { no: 1, name: "incidents", kind: "message", T: BasicIncidentDetails, repeated: true },
  ],
);

