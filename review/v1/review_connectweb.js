// Copyright 2022 SaferPlace

// @generated by protoc-gen-connect-web v0.3.0 with parameter "target=js+dts"
// @generated from file review/v1/review.proto (package review.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {ReviewIncidentRequest, ReviewIncidentResponse, StreamIncidentsRequest, StreamIncidentsResponse, WaitForIncidentRequest, WaitForIncidentResponse} from "./review_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * Review API
 *
 * The review API is used by the reviewers to decide the faith of a given report
 *
 * @generated from service review.v1.ReviewService
 */
export const ReviewService = {
  typeName: "review.v1.ReviewService",
  methods: {
    /**
     * @generated from rpc review.v1.ReviewService.StreamIncidents
     */
    streamIncidents: {
      name: "StreamIncidents",
      I: StreamIncidentsRequest,
      O: StreamIncidentsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ReviewIncident contains a stream of incoming incidents.
     *
     * @generated from rpc review.v1.ReviewService.ReviewIncident
     */
    reviewIncident: {
      name: "ReviewIncident",
      I: ReviewIncidentRequest,
      O: ReviewIncidentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * WaitForIncident is a long standing RPC call which will only return the
     * incident when it arrives
     *
     * @generated from rpc review.v1.ReviewService.WaitForIncident
     */
    waitForIncident: {
      name: "WaitForIncident",
      I: WaitForIncidentRequest,
      O: WaitForIncidentResponse,
      kind: MethodKind.Unary,
    },
  }
};

